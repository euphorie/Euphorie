{"version":3,"file":"chunks/623.b5ee15c7b5c73ee1f46d.min.js","mappings":";sMAEA,MAAMA,EAAa,2DACbC,EAAQ,EAAAC,KAAA,OAAY,CACtBC,KAAM,QACNC,aACI,MAAO,CACHC,QAAQ,EACRC,aAAa,EACbC,eAAgB,CAAC,EAEzB,EACAF,SACI,OAAOG,KAAKC,QAAQJ,MACxB,EACAK,QACI,OAAOF,KAAKC,QAAQJ,OAAS,SAAW,OAC5C,EACAM,WAAW,EACXC,gBACI,MAAO,CACHC,IAAK,CACDC,QAAS,MAEbC,IAAK,CACDD,QAAS,MAEbE,MAAO,CACHF,QAAS,MAGrB,EACAG,YACI,MAAO,CACH,CACIC,IAAKV,KAAKC,QAAQH,YACZ,WACA,gCAGlB,EACAa,YAAW,eAAEZ,IACT,MAAO,CAAC,OAAO,IAAAa,iBAAgBZ,KAAKC,QAAQF,eAAgBA,GAChE,EACAc,cACI,MAAO,CACHC,SAAUb,GAAW,EAAGc,cACbA,EAASC,cAAc,CAC1BC,KAAMjB,KAAKL,KACXuB,MAAOjB,IAIvB,EACAkB,gBACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAM7B,EACNyB,KAAMjB,KAAKiB,KACXK,cAAeC,IACX,MAAO,CAAE,CAAEhB,EAAKF,EAAKG,GAASe,EAC9B,MAAO,CAAElB,MAAKE,MAAKC,QAAO,IAI1C,IC/DG,IAAMgB,EAAU,WACnB,OAAOC,EAAAA,OAAmB,CACtB9B,KAAM,eAENC,WAHsB,WAIlB,MAAO,CACHC,QAAQ,EACRE,eAAgB,CAAC,EAExB,EAED2B,gBAAgB,EAChBC,MAAM,EACNxB,WAAW,EACXyB,WAAW,EACXC,YAAY,EAEZpB,UAhBsB,WAiBlB,MAAO,CACH,CACIC,IAAK,WAELoB,SAAU,SAACC,GAAD,OAAqC,OAA3BA,EAAKC,QAAQ,WAAsB,IAA7C,GAGrB,GAER,C","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-image/dist/tiptap-extension-image.esm.js","webpack://@patternslib/patternslib/./node_modules/@patternslib/pat-tiptap/src/extensions/image-inline.js"],"sourcesContent":["import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\n\nconst inputRegex = /(?:^|\\s)(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/;\r\nconst Image = Node.create({\r\n    name: 'image',\r\n    addOptions() {\r\n        return {\r\n            inline: false,\r\n            allowBase64: false,\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    inline() {\r\n        return this.options.inline;\r\n    },\r\n    group() {\r\n        return this.options.inline ? 'inline' : 'block';\r\n    },\r\n    draggable: true,\r\n    addAttributes() {\r\n        return {\r\n            src: {\r\n                default: null,\r\n            },\r\n            alt: {\r\n                default: null,\r\n            },\r\n            title: {\r\n                default: null,\r\n            },\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: this.options.allowBase64\r\n                    ? 'img[src]'\r\n                    : 'img[src]:not([src^=\"data:\"])',\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setImage: options => ({ commands }) => {\r\n                return commands.insertContent({\r\n                    type: this.name,\r\n                    attrs: options,\r\n                });\r\n            },\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            nodeInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n                getAttributes: match => {\r\n                    const [, , alt, src, title] = match;\r\n                    return { src, alt, title };\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Image, Image as default, inputRegex };\n//# sourceMappingURL=tiptap-extension-image.esm.js.map\n","import { Image as TipTapImage } from \"@tiptap/extension-image\";\n\nexport const factory = () => {\n    return TipTapImage.extend({\n        name: \"image-inline\",\n\n        addOptions() {\n            return {\n                inline: true,\n                HTMLAttributes: {},\n            };\n        },\n\n        allowGapCursor: false,\n        atom: false,\n        draggable: true,\n        isolating: false,\n        selectable: true,\n\n        parseHTML() {\n            return [\n                {\n                    tag: \"img[src]\",\n                    // Should not be within a figure tag. For that we have image-figure.js\n                    getAttrs: (node) => node.closest(\"figure\") === null && null, // prosemirror expects null for a successful check.\n                },\n            ];\n        },\n    });\n};\n"],"names":["inputRegex","Image","Node","name","addOptions","inline","allowBase64","HTMLAttributes","this","options","group","draggable","addAttributes","src","default","alt","title","parseHTML","tag","renderHTML","mergeAttributes","addCommands","setImage","commands","insertContent","type","attrs","addInputRules","nodeInputRule","find","getAttributes","match","factory","TipTapImage","allowGapCursor","atom","isolating","selectable","getAttrs","node","closest"],"sourceRoot":""}