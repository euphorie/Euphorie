{"version":3,"file":"chunks/18049.4abcd12d419ed52d9a6c.min.js","mappings":"8XAKA,MAAMA,EAAiB,uDAIjBC,EAAiB,uDAIjBC,EAAuB,+CAIvBC,EAAuB,+CAKvBC,EAAO,EAAAC,KAAKC,OAAO,CACrBC,KAAM,OACN,UAAAC,GACI,MAAO,CACHC,eAAgB,CAAC,EAEzB,EACA,SAAAC,GACI,MAAO,CACH,CACIC,IAAK,UAET,CACIA,IAAK,IACLC,SAAUC,GAAkC,WAA1BA,EAAKC,MAAMC,YAA2B,MAE5D,CACID,MAAO,cACPF,SAAUI,GAAS,4BAA4BC,KAAKD,IAAU,MAG1E,EACA,UAAAE,EAAW,eAAET,IACT,MAAO,CAAC,UAAU,IAAAU,iBAAgBC,KAAKC,QAAQZ,eAAgBA,GAAiB,EACpF,EACA,WAAAa,GACI,MAAO,CACHC,QAAS,IAAM,EAAGC,cACPA,EAASC,QAAQL,KAAKb,MAEjCmB,WAAY,IAAM,EAAGF,cACVA,EAASG,WAAWP,KAAKb,MAEpCqB,UAAW,IAAM,EAAGJ,cACTA,EAASK,UAAUT,KAAKb,MAG3C,EACA,oBAAAuB,GACI,MAAO,CACH,QAAS,IAAMV,KAAKW,OAAOP,SAASE,aACpC,QAAS,IAAMN,KAAKW,OAAOP,SAASE,aAE5C,EACA,aAAAM,GACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAMlC,EACNmC,KAAMf,KAAKe,QAEf,IAAAF,eAAc,CACVC,KAAMhC,EACNiC,KAAMf,KAAKe,OAGvB,EACA,aAAAC,GACI,MAAO,EACH,IAAAC,eAAc,CACVH,KAAMjC,EACNkC,KAAMf,KAAKe,QAEf,IAAAE,eAAc,CACVH,KAAM/B,EACNgC,KAAMf,KAAKe,OAGvB,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-bold/dist/index.js"],"sourcesContent":["import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches bold text via `**` as input.\n */\nconst starInputRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))$/;\n/**\n * Matches bold text via `**` while pasting.\n */\nconst starPasteRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))/g;\n/**\n * Matches bold text via `__` as input.\n */\nconst underscoreInputRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))$/;\n/**\n * Matches bold text via `__` while pasting.\n */\nconst underscorePasteRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))/g;\n/**\n * This extension allows you to mark text as bold.\n * @see https://tiptap.dev/api/marks/bold\n */\nconst Bold = Mark.create({\n    name: 'bold',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'strong',\n            },\n            {\n                tag: 'b',\n                getAttrs: node => node.style.fontWeight !== 'normal' && null,\n            },\n            {\n                style: 'font-weight',\n                getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setBold: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleBold: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetBold: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-b': () => this.editor.commands.toggleBold(),\n            'Mod-B': () => this.editor.commands.toggleBold(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: starInputRegex,\n                type: this.type,\n            }),\n            markInputRule({\n                find: underscoreInputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: starPasteRegex,\n                type: this.type,\n            }),\n            markPasteRule({\n                find: underscorePasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Bold, Bold as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=index.js.map\n"],"names":["starInputRegex","starPasteRegex","underscoreInputRegex","underscorePasteRegex","Bold","Mark","create","name","addOptions","HTMLAttributes","parseHTML","tag","getAttrs","node","style","fontWeight","value","test","renderHTML","mergeAttributes","this","options","addCommands","setBold","commands","setMark","toggleBold","toggleMark","unsetBold","unsetMark","addKeyboardShortcuts","editor","addInputRules","markInputRule","find","type","addPasteRules","markPasteRule"],"sourceRoot":""}