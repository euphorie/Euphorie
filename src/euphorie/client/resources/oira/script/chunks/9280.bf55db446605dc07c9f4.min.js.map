{"version":3,"file":"chunks/9280.bf55db446605dc07c9f4.min.js","mappings":"wJAIA,MAAMA,EAAQ,EAAAC,KAAA,OAAY,CACtBC,KAAM,QAENC,WAAU,KACC,CACHC,eAAgB,KAIxBC,MAAO,QAEPC,gBAAgB,EAChBC,WAAW,EACXC,WAAW,EACXC,YAAY,EAEZC,cAAa,KACF,CACHC,IAAK,CACDC,QAAS,MAEbC,MAAO,CACHD,QAAS,QAKrBE,UAAS,IAIE,CACH,CACIC,IAAK,6BACLC,SAAWC,IACKA,EAAKC,aAAa,OANVC,QAAQ,gBAAkB,GACzC,CAACR,GAAQA,EAAIQ,QAAQ,cAAgB,EAMtCC,CAASH,EAAKC,aAAa,SAAW,IAC1C,OAKhBG,YAAW,eAAEjB,IAET,MAEMkB,EAAqB,CACvBC,MAAO,MACPC,OAAQ,MACRC,gBAAiB,GACjBC,YAAa,KAEXC,EAAmB,CACrBJ,MAAO,MACPC,OAAQ,MACRC,gBAAiB,GACjBC,YAAa,KAGjB,IAAIE,EACJ,GAAexB,EAAeO,IAhBEQ,QAAQ,gBAAkB,EAgBtB,CAChCS,EAAQ,IACDxB,KACAkB,GAEP,MAAMO,EAAMD,EAAMjB,IAAImB,MAAM,4BAA4BC,QAAQF,IAC5DA,IACAD,EAAMjB,IAAM,iCAAiCkB,KAGrD,GAzBiB,CAAClB,GAAQA,EAAIQ,QAAQ,cAAgB,EAyBlDC,CAAShB,EAAeO,KAAM,CAC9BiB,EAAQ,IACDxB,KACAuB,GAEP,MAAME,EAAMD,EAAMjB,IAAImB,MAAM,8BAA8BC,QAAQF,IAC9DA,IACAD,EAAMjB,IAAM,kCAAkCkB,KAItD,MAAO,CAAC,UAAU,IAAAG,iBAAgBC,KAAKC,QAAQ9B,eAAgBwB,KAGnEO,cACI,MAAO,CACHC,SACKF,GACD,EAAGG,SAAAA,KACQA,EAASC,cAAc,CAC1BC,KAAMN,KAAK/B,KACX0B,MAAOM,MAM3BM,wBACI,MAAO,CACH,IAAI,KAAO,CACPC,MAAO,CACHC,gBAAiB,CAEbC,UAAW,CAACC,EAAMC,KACd,IAAKA,EAAMC,OACP,OAAO,EAGX,MAAMC,EAAMH,EAAKI,SAASH,EAAMC,OAAQ,GAOxC,OANaF,EAAKK,MAAMC,IAAIC,QAAQJ,GAE3BK,OAAOb,OAASN,KAAKM,MAC1BM,EAAMQ,kBAGH,WASnC","sources":["webpack://oira.prototype/./node_modules/@patternslib/pat-tiptap/src/extensions/embed.js"],"sourcesContent":["// From: tiptap/demos/src/Experiments/GenericFigure/Vue/figure.ts\nimport { Node, mergeAttributes } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nconst Embed = Node.create({\n    name: \"embed\",\n\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n\n    group: \"block\",\n\n    allowGapCursor: false,\n    draggable: false,\n    isolating: true,\n    selectable: false,\n\n    addAttributes() {\n        return {\n            src: {\n                default: null,\n            },\n            title: {\n                default: null,\n            },\n        };\n    },\n\n    parseHTML() {\n        // NOTE: no ``this`` in this method. Therefore some code duplication.\n        const is_youtube = (src) => src.indexOf(\"youtube.com\") > -1;\n        const is_vimeo = (src) => src.indexOf(\"vimeo.com\") > -1;\n        return [\n            {\n                tag: `iframe[src*=\"youtube.com\"]`,\n                getAttrs: (node) =>\n                    (is_youtube(node.getAttribute(\"src\")) ||\n                        is_vimeo(node.getAttribute(\"src\")) > -1) &&\n                    null,\n            },\n        ];\n    },\n\n    renderHTML({ HTMLAttributes }) {\n        // NOTE: no ``this`` in this method. Therefore some code duplication.\n        const is_youtube = (src) => src.indexOf(\"youtube.com\") > -1;\n        const is_vimeo = (src) => src.indexOf(\"vimeo.com\") > -1;\n        const attributes_youtube = {\n            width: \"560\",\n            height: \"315\",\n            allowfullscreen: \"\",\n            frameborder: \"0\",\n        };\n        const attributes_vimeo = {\n            width: \"640\",\n            height: \"360\",\n            allowfullscreen: \"\",\n            frameborder: \"0\",\n        };\n\n        let attrs;\n        if (is_youtube(HTMLAttributes.src)) {\n            attrs = {\n                ...HTMLAttributes,\n                ...attributes_youtube,\n            };\n            const vid = attrs.src.match(/watch.*v\\=(?<vid>[^&]*)/)?.groups?.vid;\n            if (vid) {\n                attrs.src = `https://www.youtube.com/embed/${vid}`;\n            }\n        }\n        if (is_vimeo(HTMLAttributes.src)) {\n            attrs = {\n                ...HTMLAttributes,\n                ...attributes_vimeo,\n            };\n            const vid = attrs.src.match(/vimeo.com\\/(?<vid>[0-9]*)/)?.groups?.vid;\n            if (vid) {\n                attrs.src = `https://player.vimeo.com/video/${vid}`;\n            }\n        }\n\n        return [\"iframe\", mergeAttributes(this.options.HTMLAttributes, attrs)];\n    },\n\n    addCommands() {\n        return {\n            setEmbed:\n                (options) =>\n                ({ commands }) => {\n                    return commands.insertContent({\n                        type: this.name,\n                        attrs: options,\n                    });\n                },\n        };\n    },\n\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                props: {\n                    handleDOMEvents: {\n                        // prevent dragging nodes out of the figure\n                        dragstart: (view, event) => {\n                            if (!event.target) {\n                                return false;\n                            }\n\n                            const pos = view.posAtDOM(event.target, 0);\n                            const $pos = view.state.doc.resolve(pos);\n\n                            if ($pos.parent.type === this.type) {\n                                event.preventDefault();\n                            }\n\n                            return false;\n                        },\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nexport default Embed;\n"],"names":["Embed","Node","name","addOptions","HTMLAttributes","group","allowGapCursor","draggable","isolating","selectable","addAttributes","src","default","title","parseHTML","tag","getAttrs","node","getAttribute","indexOf","is_vimeo","renderHTML","attributes_youtube","width","height","allowfullscreen","frameborder","attributes_vimeo","attrs","vid","match","groups","mergeAttributes","this","options","addCommands","setEmbed","commands","insertContent","type","addProseMirrorPlugins","props","handleDOMEvents","dragstart","view","event","target","pos","posAtDOM","state","doc","resolve","parent","preventDefault"],"sourceRoot":""}