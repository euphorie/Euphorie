{"version":3,"file":"chunks/34659.9177feae0d8148ede524.min.js","mappings":"2HAgEAA,EAAOC,QAzDP,SAAaC,GACX,MAAMC,EAAe,CACnBC,QACE,8CACFC,QACE,yBACFC,SACE,2FAGEC,EAAY,CAChBC,UAAW,QACXC,MAAO,OACPC,IAAK,KACLC,SAAUR,GAaNS,EAAS,CACbJ,UAAW,SACXK,SAAU,CAAEN,GACZO,SAAU,CACR,CACEL,MAAO,KACPC,IAAK,MAEP,CACED,MAAO,IACPC,IAAK,OAILK,EAAc,CAClBb,EAAKc,YACLd,EAAKe,kBACLf,EAAKgB,qBACLN,EA7BY,CACZH,MAAO,uBACPU,aAAa,EACbC,UAAW,EACXP,SAAU,CACR,CACEL,UAAW,OACXC,MAAO,UA0Bb,OADAF,EAAUM,SAAWE,EACd,CACLM,KAAM,MACNC,QAAS,CAAE,SACXX,SAAUR,EACVU,SAAUE,EAEd,C","sources":["webpack://@patternslib/patternslib/./node_modules/highlight.js/lib/languages/nix.js"],"sourcesContent":["/*\nLanguage: Nix\nAuthor: Domen Ko≈æar <domen@dev.si>\nDescription: Nix functional language\nWebsite: http://nixos.org/nix\n*/\n\nfunction nix(hljs) {\n  const NIX_KEYWORDS = {\n    keyword:\n      'rec with let in inherit assert if else then',\n    literal:\n      'true false or and null',\n    built_in:\n      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' +\n      'toString derivation'\n  };\n  const ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    keywords: NIX_KEYWORDS\n  };\n  const ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: /\\S+/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    contains: [ ANTIQUOTE ],\n    variants: [\n      {\n        begin: \"''\",\n        end: \"''\"\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      }\n    ]\n  };\n  const EXPRESSIONS = [\n    hljs.NUMBER_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    ATTRS\n  ];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    name: 'Nix',\n    aliases: [ \"nixos\" ],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n}\n\nmodule.exports = nix;\n"],"names":["module","exports","hljs","NIX_KEYWORDS","keyword","literal","built_in","ANTIQUOTE","className","begin","end","keywords","STRING","contains","variants","EXPRESSIONS","NUMBER_MODE","HASH_COMMENT_MODE","C_BLOCK_COMMENT_MODE","returnBegin","relevance","name","aliases"],"sourceRoot":""}