"use strict";(self.webpackChunk_patternslib_patternslib=self.webpackChunk_patternslib_patternslib||[]).push([[63165],{63165:function(t,e,n){n.r(e),n.d(e,{Blockquote:function(){return u},default:function(){return u},inputRegex:function(){return r}});var o=n(52781);const r=/^\s*>\s$/,u=o.Node.create({name:"blockquote",addOptions(){return{HTMLAttributes:{}}},content:"block+",group:"block",defining:!0,parseHTML(){return[{tag:"blockquote"}]},renderHTML({HTMLAttributes:t}){return["blockquote",(0,o.mergeAttributes)(this.options.HTMLAttributes,t),0]},addCommands(){return{setBlockquote:()=>({commands:t})=>t.wrapIn(this.name),toggleBlockquote:()=>({commands:t})=>t.toggleWrap(this.name),unsetBlockquote:()=>({commands:t})=>t.lift(this.name)}},addKeyboardShortcuts(){return{"Mod-Shift-b":()=>this.editor.commands.toggleBlockquote()}},addInputRules(){return[(0,o.wrappingInputRule)({find:r,type:this.type})]}})}}]);
//# sourceMappingURL=63165.f0b44d5e985661f1ea7e.min.js.map