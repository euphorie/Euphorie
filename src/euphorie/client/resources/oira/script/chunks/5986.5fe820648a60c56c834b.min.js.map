{"version":3,"file":"chunks/5986.5fe820648a60c56c834b.min.js","mappings":"8MAEA,MAAMA,EAAa,kDCAN,EDCC,EAAAC,KAAA,OAAY,CACtBC,KAAM,QACNC,WAAU,KACC,CACHC,QAAQ,EACRC,eAAgB,KAGxBD,SACI,OAAOE,KAAKC,QAAQH,QAExBI,QACI,OAAOF,KAAKC,QAAQH,OAAS,SAAW,SAE5CK,WAAW,EACXC,cAAa,KACF,CACHC,IAAK,CACDC,QAAS,MAEbC,IAAK,CACDD,QAAS,MAEbE,MAAO,CACHF,QAAS,QAIrBG,UAAS,IACE,CACH,CACIC,IAAK,iCAIjBC,YAAW,eAAEZ,IACT,MAAO,CAAC,OAAO,IAAAa,iBAAgBZ,KAAKC,QAAQF,eAAgBA,KAEhEc,cACI,MAAO,CACHC,SAAUb,GAAW,EAAGc,SAAAA,KACbA,EAASC,cAAc,CAC1BC,KAAMjB,KAAKJ,KACXsB,MAAOjB,MAKvBkB,gBACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAM3B,EACNuB,KAAMjB,KAAKiB,KACXK,cAAeC,IACX,MAAO,CAAE,CAAEhB,EAAKF,EAAKG,GAASe,EAC9B,MAAO,CAAElB,IAAAA,EAAKE,IAAAA,EAAKC,MAAAA,UCxDlB,OAAmB,CACpCgB,gBAAgB,EAChBrB,WAAW,EACXsB,WAAW,EACXC,YAAY,EAEZjB,UAAS,IACE,CACH,CACIC,IAAK,eAMrB","sources":["webpack://oira.prototype/./node_modules/@tiptap/extension-image/dist/tiptap-extension-image.esm.js","webpack://oira.prototype/./node_modules/@patternslib/pat-tiptap/src/extensions/image.js"],"sourcesContent":["import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\n\nconst inputRegex = /(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))/;\r\nconst Image = Node.create({\r\n    name: 'image',\r\n    addOptions() {\r\n        return {\r\n            inline: false,\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    inline() {\r\n        return this.options.inline;\r\n    },\r\n    group() {\r\n        return this.options.inline ? 'inline' : 'block';\r\n    },\r\n    draggable: true,\r\n    addAttributes() {\r\n        return {\r\n            src: {\r\n                default: null,\r\n            },\r\n            alt: {\r\n                default: null,\r\n            },\r\n            title: {\r\n                default: null,\r\n            },\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 'img[src]:not([src^=\"data:\"])',\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setImage: options => ({ commands }) => {\r\n                return commands.insertContent({\r\n                    type: this.name,\r\n                    attrs: options,\r\n                });\r\n            },\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            nodeInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n                getAttributes: match => {\r\n                    const [, , alt, src, title] = match;\r\n                    return { src, alt, title };\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Image, Image as default, inputRegex };\n//# sourceMappingURL=tiptap-extension-image.esm.js.map\n","import { Image as TipTapImage } from \"@tiptap/extension-image\";\n\nexport const Image = TipTapImage.extend({\n    allowGapCursor: false,\n    draggable: false,\n    isolating: true,\n    selectable: false,\n\n    parseHTML() {\n        return [\n            {\n                tag: \"img[src]\",\n            },\n        ];\n    },\n});\n\nexport default Image;\n"],"names":["inputRegex","Node","name","addOptions","inline","HTMLAttributes","this","options","group","draggable","addAttributes","src","default","alt","title","parseHTML","tag","renderHTML","mergeAttributes","addCommands","setImage","commands","insertContent","type","attrs","addInputRules","nodeInputRule","find","getAttributes","match","allowGapCursor","isolating","selectable"],"sourceRoot":""}