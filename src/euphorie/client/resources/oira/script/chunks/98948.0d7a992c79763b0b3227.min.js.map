{"version":3,"file":"chunks/98948.0d7a992c79763b0b3227.min.js","mappings":"wMAMA,MAAMA,EAAU,EAAAC,KAAKC,OAAO,CACxBC,KAAM,UACN,UAAAC,GACI,MAAO,CACHC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACxBC,eAAgB,CAAC,EAEzB,EACAC,QAAS,UACTC,MAAO,QACPC,UAAU,EACV,aAAAC,GACI,MAAO,CACHC,MAAO,CACHC,QAAS,EACTC,UAAU,GAGtB,EACA,SAAAC,GACI,OAAOC,KAAKC,QAAQX,OACfY,KAAKN,IAAU,CAChBO,IAAK,IAAIP,IACTQ,MAAO,CAAER,YAEjB,EACA,UAAAS,EAAW,KAAEC,EAAI,eAAEf,IAKf,MAAO,CAAC,IAJSS,KAAKC,QAAQX,OAAOiB,SAASD,EAAKF,MAAMR,OAEnDU,EAAKF,MAAMR,MACXI,KAAKC,QAAQX,OAAO,MACL,IAAAkB,iBAAgBR,KAAKC,QAAQV,eAAgBA,GAAiB,EACvF,EACA,WAAAkB,GACI,MAAO,CACHC,WAAYC,GAAc,EAAGC,gBACpBZ,KAAKC,QAAQX,OAAOiB,SAASI,EAAWf,QAGtCgB,EAASC,QAAQb,KAAKZ,KAAMuB,GAEvCG,cAAeH,GAAc,EAAGC,gBACvBZ,KAAKC,QAAQX,OAAOiB,SAASI,EAAWf,QAGtCgB,EAASG,WAAWf,KAAKZ,KAAM,YAAauB,GAG/D,EACA,oBAAAK,GACI,OAAOhB,KAAKC,QAAQX,OAAO2B,QAAO,CAACC,EAAOtB,KAAU,IAC7CsB,EAEC,CAAC,WAAWtB,KAAU,IAAMI,KAAKmB,OAAOP,SAASE,cAAc,CAAElB,aAErE,CAAC,EACT,EACA,aAAAwB,GACI,OAAOpB,KAAKC,QAAQX,OAAOY,KAAIN,IACpB,IAAAyB,wBAAuB,CAC1BC,KAAM,IAAIC,OAAO,SAAS3B,WAC1B4B,KAAMxB,KAAKwB,KACXC,cAAe,CACX7B,YAIhB,ICvES8B,EAAUA,IACZC,EAAcC,OAAO,CACxBR,aAAAA,GAEI,MAAO,EACX,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-heading/dist/index.js","webpack://@patternslib/patternslib/./node_modules/@patternslib/pat-tiptap/src/extensions/heading.js"],"sourcesContent":["import { Node, mergeAttributes, textblockTypeInputRule } from '@tiptap/core';\n\n/**\n * This extension allows you to create headings.\n * @see https://www.tiptap.dev/api/nodes/heading\n */\nconst Heading = Node.create({\n    name: 'heading',\n    addOptions() {\n        return {\n            levels: [1, 2, 3, 4, 5, 6],\n            HTMLAttributes: {},\n        };\n    },\n    content: 'inline*',\n    group: 'block',\n    defining: true,\n    addAttributes() {\n        return {\n            level: {\n                default: 1,\n                rendered: false,\n            },\n        };\n    },\n    parseHTML() {\n        return this.options.levels\n            .map((level) => ({\n            tag: `h${level}`,\n            attrs: { level },\n        }));\n    },\n    renderHTML({ node, HTMLAttributes }) {\n        const hasLevel = this.options.levels.includes(node.attrs.level);\n        const level = hasLevel\n            ? node.attrs.level\n            : this.options.levels[0];\n        return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setHeading: attributes => ({ commands }) => {\n                if (!this.options.levels.includes(attributes.level)) {\n                    return false;\n                }\n                return commands.setNode(this.name, attributes);\n            },\n            toggleHeading: attributes => ({ commands }) => {\n                if (!this.options.levels.includes(attributes.level)) {\n                    return false;\n                }\n                return commands.toggleNode(this.name, 'paragraph', attributes);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return this.options.levels.reduce((items, level) => ({\n            ...items,\n            ...{\n                [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n            },\n        }), {});\n    },\n    addInputRules() {\n        return this.options.levels.map(level => {\n            return textblockTypeInputRule({\n                find: new RegExp(`^(#{1,${level}})\\\\s$`),\n                type: this.type,\n                getAttributes: {\n                    level,\n                },\n            });\n        });\n    },\n});\n\nexport { Heading, Heading as default };\n//# sourceMappingURL=index.js.map\n","import { Heading as TipTapHeading } from \"@tiptap/extension-heading\";\n\nexport const factory = () => {\n    return TipTapHeading.extend({\n        addInputRules() {\n            // Clear markdown-style input rules to not interfer with tagging character \"#\".\n            return [];\n        },\n    });\n};\n"],"names":["Heading","Node","create","name","addOptions","levels","HTMLAttributes","content","group","defining","addAttributes","level","default","rendered","parseHTML","this","options","map","tag","attrs","renderHTML","node","includes","mergeAttributes","addCommands","setHeading","attributes","commands","setNode","toggleHeading","toggleNode","addKeyboardShortcuts","reduce","items","editor","addInputRules","textblockTypeInputRule","find","RegExp","type","getAttributes","factory","TipTapHeading","extend"],"sourceRoot":""}