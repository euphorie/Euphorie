{"version":3,"file":"chunks/1567.cee80097df030c10f670.min.js","mappings":"gSAKA,MAAMA,EAAa,2CAIbC,EAAa,2CAKbC,EAAO,EAAAC,KAAKC,OAAO,CACrBC,KAAM,OACN,UAAAC,GACI,MAAO,CACHC,eAAgB,CAAC,EAEzB,EACAC,SAAU,IACVC,MAAM,EACNC,UAAU,EACV,SAAAC,GACI,MAAO,CACH,CAAEC,IAAK,QAEf,EACA,UAAAC,EAAW,eAAEN,IACT,MAAO,CAAC,QAAQ,IAAAO,iBAAgBC,KAAKC,QAAQT,eAAgBA,GAAiB,EAClF,EACA,WAAAU,GACI,MAAO,CACHC,QAAS,IAAM,EAAGC,cACPA,EAASC,QAAQL,KAAKV,MAEjCgB,WAAY,IAAM,EAAGF,cACVA,EAASG,WAAWP,KAAKV,MAEpCkB,UAAW,IAAM,EAAGJ,cACTA,EAASK,UAAUT,KAAKV,MAG3C,EACA,oBAAAoB,GACI,MAAO,CACH,QAAS,IAAMV,KAAKW,OAAOP,SAASE,aAE5C,EACA,aAAAM,GACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAM7B,EACN8B,KAAMf,KAAKe,OAGvB,EACA,aAAAC,GACI,MAAO,EACH,IAAAC,eAAc,CACVH,KAAM5B,EACN6B,KAAMf,KAAKe,OAGvB,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-code/dist/index.js"],"sourcesContent":["import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches inline code.\n */\nconst inputRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))$/;\n/**\n * Matches inline code while pasting.\n */\nconst pasteRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))/g;\n/**\n * This extension allows you to mark text as inline code.\n * @see https://tiptap.dev/api/marks/code\n */\nconst Code = Mark.create({\n    name: 'code',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    excludes: '_',\n    code: true,\n    exitable: true,\n    parseHTML() {\n        return [\n            { tag: 'code' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setCode: () => ({ commands }) => {\n                return commands.setMark(this.name);\n            },\n            toggleCode: () => ({ commands }) => {\n                return commands.toggleMark(this.name);\n            },\n            unsetCode: () => ({ commands }) => {\n                return commands.unsetMark(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-e': () => this.editor.commands.toggleCode(),\n        };\n    },\n    addInputRules() {\n        return [\n            markInputRule({\n                find: inputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n    addPasteRules() {\n        return [\n            markPasteRule({\n                find: pasteRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Code, Code as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n"],"names":["inputRegex","pasteRegex","Code","Mark","create","name","addOptions","HTMLAttributes","excludes","code","exitable","parseHTML","tag","renderHTML","mergeAttributes","this","options","addCommands","setCode","commands","setMark","toggleCode","toggleMark","unsetCode","unsetMark","addKeyboardShortcuts","editor","addInputRules","markInputRule","find","type","addPasteRules","markPasteRule"],"sourceRoot":""}