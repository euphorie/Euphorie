{"version":3,"file":"chunks/7191.b568a3ffa3964c488389.min.js","mappings":";sOAEA,MAAMA,EAAY,EAAAC,KAAA,OAAY,CAC1BC,KAAM,YACNC,aACI,MAAO,CACHC,WAAW,EACXC,eAAgB,CAAC,EAEzB,EACAC,QAAQ,EACRC,MAAO,SACPC,YAAY,EACZC,YACI,MAAO,CACH,CAAEC,IAAK,MAEf,EACAC,YAAW,eAAEN,IACT,MAAO,CAAC,MAAM,IAAAO,iBAAgBC,KAAKC,QAAQT,eAAgBA,GAC/D,EACAU,aACI,MAAO,IACX,EACAC,cACI,MAAO,CACHC,aAAc,IAAM,EAAGC,WAAUC,QAAOC,QAAOC,YACpCH,EAASI,MAAM,CAClB,IAAMJ,EAASK,WACf,IAAML,EAASM,SAAQ,KACnB,MAAM,UAAEC,EAAS,YAAEC,GAAgBN,EACnC,GAAIK,EAAUE,MAAMC,OAAOC,KAAKC,KAAKC,UACjC,OAAO,EAEX,MAAM,UAAE3B,GAAcS,KAAKC,SACrB,gBAAEkB,GAAoBX,EAAOY,iBAC7BC,EAAQR,GACND,EAAUU,IAAIC,cAAgBX,EAAUE,MAAMO,QACtD,OAAOf,IACFkB,cAAc,CAAER,KAAMhB,KAAKX,OAC3BsB,SAAQ,EAAGc,KAAIC,eAChB,GAAIA,GAAYL,GAAS9B,EAAW,CAChC,MAAMoC,EAAgBN,EACjBO,QAAOC,GAAQV,EAAgBW,SAASD,EAAKb,KAAK3B,QACvDoC,EAAGM,YAAYJ,EACnB,CACA,OAAO,CAAI,IAEVK,KAAK,MAK9B,EACAC,uBACI,MAAO,CACH,YAAa,IAAMjC,KAAKQ,OAAOH,SAASD,eACxC,cAAe,IAAMJ,KAAKQ,OAAOH,SAASD,eAElD,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-hard-break/dist/tiptap-extension-hard-break.esm.js"],"sourcesContent":["import { Node, mergeAttributes } from '@tiptap/core';\n\nconst HardBreak = Node.create({\r\n    name: 'hardBreak',\r\n    addOptions() {\r\n        return {\r\n            keepMarks: true,\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    inline: true,\r\n    group: 'inline',\r\n    selectable: false,\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'br' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\r\n    },\r\n    renderText() {\r\n        return '\\n';\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setHardBreak: () => ({ commands, chain, state, editor, }) => {\r\n                return commands.first([\r\n                    () => commands.exitCode(),\r\n                    () => commands.command(() => {\r\n                        const { selection, storedMarks } = state;\r\n                        if (selection.$from.parent.type.spec.isolating) {\r\n                            return false;\r\n                        }\r\n                        const { keepMarks } = this.options;\r\n                        const { splittableMarks } = editor.extensionManager;\r\n                        const marks = storedMarks\r\n                            || (selection.$to.parentOffset && selection.$from.marks());\r\n                        return chain()\r\n                            .insertContent({ type: this.name })\r\n                            .command(({ tr, dispatch }) => {\r\n                            if (dispatch && marks && keepMarks) {\r\n                                const filteredMarks = marks\r\n                                    .filter(mark => splittableMarks.includes(mark.type.name));\r\n                                tr.ensureMarks(filteredMarks);\r\n                            }\r\n                            return true;\r\n                        })\r\n                            .run();\r\n                    }),\r\n                ]);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-Enter': () => this.editor.commands.setHardBreak(),\r\n            'Shift-Enter': () => this.editor.commands.setHardBreak(),\r\n        };\r\n    },\r\n});\n\nexport { HardBreak, HardBreak as default };\n//# sourceMappingURL=tiptap-extension-hard-break.esm.js.map\n"],"names":["HardBreak","Node","name","addOptions","keepMarks","HTMLAttributes","inline","group","selectable","parseHTML","tag","renderHTML","mergeAttributes","this","options","renderText","addCommands","setHardBreak","commands","chain","state","editor","first","exitCode","command","selection","storedMarks","$from","parent","type","spec","isolating","splittableMarks","extensionManager","marks","$to","parentOffset","insertContent","tr","dispatch","filteredMarks","filter","mark","includes","ensureMarks","run","addKeyboardShortcuts"],"sourceRoot":""}