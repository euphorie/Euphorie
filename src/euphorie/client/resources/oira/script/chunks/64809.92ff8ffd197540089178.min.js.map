{"version":3,"file":"chunks/64809.92ff8ffd197540089178.min.js","mappings":"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","sources":["webpack://@patternslib/patternslib/./node_modules/prosemirror-dropcursor/dist/index.js","webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-dropcursor/dist/index.js"],"sourcesContent":["import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { Extension } from '@tiptap/core';\nimport { dropCursor } from '@tiptap/pm/dropcursor';\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nconst Dropcursor = Extension.create({\n    name: 'dropCursor',\n    addOptions() {\n        return {\n            color: 'currentColor',\n            width: 1,\n            class: undefined,\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            dropCursor(this.options),\n        ];\n    },\n});\n\nexport { Dropcursor, Dropcursor as default };\n//# sourceMappingURL=index.js.map\n"],"names":["dropCursor","options","view","editorView","DropCursorView","constructor","_a","this","cursorPos","element","timeout","width","color","undefined","class","handlers","map","name","handler","e","dom","addEventListener","destroy","forEach","removeEventListener","update","prevState","doc","state","content","size","setCursor","updateOverlay","pos","parentNode","removeChild","rect","$pos","resolve","isBlock","parent","inlineContent","before","nodeBefore","after","nodeAfter","node","nodeDOM","nodeSize","nodeRect","getBoundingClientRect","top","bottom","left","right","coords","coordsAtPos","parentLeft","parentTop","offsetParent","appendChild","document","createElement","className","style","cssText","backgroundColor","classList","toggle","body","getComputedStyle","position","pageXOffset","pageYOffset","scrollLeft","scrollTop","height","scheduleRemoval","clearTimeout","setTimeout","dragover","event","editable","posAtCoords","clientX","clientY","inside","nodeAt","disableDropCursor","type","spec","disabled","target","dragging","slice","point","dragend","drop","dragleave","contains","relatedTarget","Dropcursor","Extension","create","addOptions","addProseMirrorPlugins"],"sourceRoot":""}