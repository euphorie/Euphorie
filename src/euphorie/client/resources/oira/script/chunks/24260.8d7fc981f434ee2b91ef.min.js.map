{"version":3,"file":"chunks/24260.8d7fc981f434ee2b91ef.min.js","mappings":"uOAMA,MAAMA,EAAY,EAAAC,KAAKC,OAAO,CAC1BC,KAAM,YACNC,SAAU,IACV,UAAAC,GACI,MAAO,CACHC,eAAgB,CAAC,EAEzB,EACAC,MAAO,QACPC,QAAS,UACT,SAAAC,GACI,MAAO,CACH,CAAEC,IAAK,KAEf,EACA,UAAAC,EAAW,eAAEL,IACT,MAAO,CAAC,KAAK,IAAAM,iBAAgBC,KAAKC,QAAQR,eAAgBA,GAAiB,EAC/E,EACA,WAAAS,GACI,MAAO,CACHC,aAAc,IAAM,EAAGC,cACZA,EAASC,QAAQL,KAAKV,MAGzC,EACA,oBAAAgB,GACI,MAAO,CACH,YAAa,IAAMN,KAAKO,OAAOH,SAASD,eAEhD,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-paragraph/dist/index.js"],"sourcesContent":["import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to create paragraphs.\n * @see https://www.tiptap.dev/api/nodes/paragraph\n */\nconst Paragraph = Node.create({\n    name: 'paragraph',\n    priority: 1000,\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    group: 'block',\n    content: 'inline*',\n    parseHTML() {\n        return [\n            { tag: 'p' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setParagraph: () => ({ commands }) => {\n                return commands.setNode(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n        };\n    },\n});\n\nexport { Paragraph, Paragraph as default };\n//# sourceMappingURL=index.js.map\n"],"names":["Paragraph","Node","create","name","priority","addOptions","HTMLAttributes","group","content","parseHTML","tag","renderHTML","mergeAttributes","this","options","addCommands","setParagraph","commands","setNode","addKeyboardShortcuts","editor"],"sourceRoot":""}