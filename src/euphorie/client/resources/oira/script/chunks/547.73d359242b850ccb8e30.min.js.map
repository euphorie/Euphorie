{"version":3,"file":"chunks/547.73d359242b850ccb8e30.min.js","mappings":";ihBACA,wxM,mUAgBA,IAAMA,EAAgB,CAAC,EACnBC,GAA+B,EAEpB,SAAeC,EAA9B,kC,kCAAe,WAA6BC,GAA7B,0EACLC,EAAYC,OAAOF,IAGrBH,EAAcG,GAJP,yCAKAC,GALA,UASNH,EATM,gCAUDK,EAAAA,EAAyB,WAVxB,OAWPL,GAA+B,EAXxB,uBAcLG,EAAUG,KAAKC,EAAAA,EAAyBC,SAdnC,cAiBXT,EAAcG,IAAU,EAjBb,kBAkBJC,GAlBI,6C,6ZCnBf,wxM,q1CASkD,IAAvCC,OAAOK,8BACdL,OAAOK,4BAA8B,CAAC,GAE1C,IAoBwBC,EApBlBX,EAAgBK,OAAOK,4BAEtB,SAAeE,EAAtB,kC,kCAAO,kGAAmCC,EAAnC,EAAmCA,YAAnC,IAAgDC,eAAAA,OAAhD,MAAiE,SAAjE,GACCd,EAAc,GAAD,OAAIa,EAAJ,YAAmBC,IADjC,iEAKqBZ,EAAcW,GALnC,cAKGT,EALH,gBAMmBA,EAAUW,IAAID,GANjC,cAMGE,EANH,OAOGC,EAASD,IAEfhB,EAAc,GAAD,OAAIa,EAAJ,YAAmBC,KAAoB,EAEpDI,QAAQC,MAAR,wEACqEN,EADrE,OAXG,kBAeII,GAfJ,6C,sBAkBiBN,EAUT,WAKX,IALuB,MAKPS,OAAOC,KAAKhB,QAAQiB,QAAO,SAACC,GAAD,OAAuC,IAA/BA,EAAGC,QAxC5B,qBAwCiB,KALpB,IAMvB,IAAK,EAAL,qBAEIZ,EAAkB,CAAEC,YAFW,SANZ,+BAUvBY,SAASC,cACL,IAAIC,MAAM,0BAA2B,CAAEC,SAAS,EAAMC,YAAY,IAEzE,EArB+B,aAAxBJ,SAASK,YAAqD,gBAAxBL,SAASK,WAE/CC,WAAWpB,EAAI,GAEfc,SAASO,iBAAiB,mBAAoBrB,GCnCtD,kE","sources":["webpack://@patternslib/patternslib/./webpack/module_federation--dynamic-federation.js","webpack://@patternslib/patternslib/./webpack/module_federation.js","webpack://@patternslib/patternslib/./src/index.js"],"sourcesContent":["// Author: Manfred Steyer <manfred.steyer@gmx.net>\n// Author: Johannes Raggam <thetetet@gmail.com>\n\n// From:\n//   https://github.com/manfredsteyer/plugin-demo.git\n//   https://github.com/thet/module-federation-minimaltest.git\n\n/**\n * Load remote module / bundle.\n *\n * Wrapper around webpack runtime API\n *\n * Usage: get_container(\"bundle-name-xyz\")\n *\n * @param {string} remote - the remote global name\n * @returns {Promise<object>} - Federated Module Container\n */\nconst container_map = {};\nlet is_default_scope_initialized = false;\n\nexport default async function get_container(remote) {\n    const container = window[remote];\n\n    // Do we still need to initialize the remote?\n    if (container_map[remote]) {\n        return container;\n    }\n\n    // Do we still need to initialize the shared scope?\n    if (!is_default_scope_initialized) {\n        await __webpack_init_sharing__(\"default\"); // eslint-disable-line no-undef\n        is_default_scope_initialized = true;\n    }\n\n    await container.init(__webpack_share_scopes__.default); // eslint-disable-line no-undef\n\n    // Remember that the container has been initialized.\n    container_map[remote] = true;\n    return container;\n}\n","/**\n * Initialize dynamic module federation.\n */\nimport get_container from \"./module_federation--dynamic-federation\";\n\n// Patternslib Module Federation bundle prefix.\n// This is used to filter for module federation enabled bundles.\n// NOTE: This is also defined in ``webpack.mf.js``.\nexport const MF_NAME_PREFIX = \"__patternslib_mf__\";\n\nif (typeof window.__patternslib_container_map === \"undefined\") {\n    window.__patternslib_container_map = {};\n}\nconst container_map = window.__patternslib_container_map;\n\nexport async function initialize_remote({ remote_name, exposed_module = \"./main\" }) {\n    if (container_map[`${remote_name}-${exposed_module}`]) {\n        // already initialized, return.\n        return;\n    }\n    const container = await get_container(remote_name);\n    const factory = await container.get(exposed_module);\n    const module = factory();\n\n    container_map[`${remote_name}-${exposed_module}`] = true;\n\n    console.debug(\n        `Patternslib Module Federation: Loaded and initialized bundle \"${remote_name}\".`\n    );\n\n    return module;\n}\n\nfunction document_ready(fn) {\n    // see if DOM is already available\n    if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n        // call on next available tick\n        setTimeout(fn, 1);\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", fn);\n    }\n}\n\ndocument_ready(function () {\n    // Automatically initialize all Module Federation enabled Patternslib based\n    // bundles by filtering for the prefix ``__patternslib_mf__``.\n    // Do this on document ready, as this is the time where all MF bundles have\n    // been registered in the global namespace.\n    const bundles = Object.keys(window).filter((it) => it.indexOf(MF_NAME_PREFIX) === 0);\n    for (const bundle_name of bundles) {\n        // Now load + initialize each bundle.\n        initialize_remote({ remote_name: bundle_name });\n    }\n    document.dispatchEvent(\n        new Event(\"patternslib__mf--loaded\", { bubbles: true, cancelable: false })\n    );\n});\n","// Webpack entry point for module federation.\nimport \"../webpack/module_federation\";\n// The next import needs to be kept with parentheses, otherwise we get this error:\n// \"Shared module is not available for eager consumption.\"\nimport(\"./patterns\");\n"],"names":["container_map","is_default_scope_initialized","get_container","remote","container","window","__webpack_init_sharing__","init","__webpack_share_scopes__","default","__patternslib_container_map","fn","initialize_remote","remote_name","exposed_module","get","factory","module","console","debug","Object","keys","filter","it","indexOf","document","dispatchEvent","Event","bubbles","cancelable","readyState","setTimeout","addEventListener"],"sourceRoot":""}