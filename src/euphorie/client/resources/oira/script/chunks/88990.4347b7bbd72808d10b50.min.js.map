{"version":3,"file":"chunks/88990.4347b7bbd72808d10b50.min.js","mappings":"mNAGO,MAAMA,EAAUA,IACZC,EAAAA,KAAKC,OAAO,CACfC,KAAM,kBAENC,UAAAA,GACI,MAAO,CACHC,eAAgB,CACZC,MAAO,mBAGnB,EAEAC,MAAO,QACPC,WAAW,EACXC,YAAY,EAEZC,SAAAA,GACI,MAAO,CACH,CACIC,IAAK,IACLC,SAAWC,GAASA,EAAKC,QAAQ,qBAAuB,MAGpE,EAEAC,UAAAA,CAAUC,GAAqB,IAApB,eAAEX,GAAgBW,EACzB,MAAO,CACH,KACAC,EAAAA,EAAAA,iBAAgBC,KAAKC,QAAQd,eAAgBA,GAC7C,IAER,EAKAe,kCAAAA,GACI,MAAO,CACH,IAAIC,EAAAA,GAAO,CACPC,iBAAAA,CAAkBC,EAAaC,GAC3B,IAAIC,GAAS,EACb,MAAMC,EAAe,GAmBrB,OAlBAH,EAAYI,MAAMC,SAAQ,CAACC,EAAMC,KACT,YAAhBD,EAAKE,QACLL,EAAaM,KAAKF,EACtB,IAGJJ,EAAaE,SAASE,IAClB,MAAMG,EAAMV,EAAYW,QAAQC,KAAKL,GAC/BM,EAAWH,EAAII,OAAO,GACtBC,EAASL,EAAII,OAAO,GAAKJ,EAAII,OAAO,GAG1Cb,EAAMe,IAAIC,aAAaJ,EAAUE,GAASzB,IACf,oBAAnBA,EAAK4B,KAAKtC,OACVsB,GAAS,EACb,GACF,IAECA,CACX,IAGZ,G","sources":["webpack://@patternslib/patternslib/./node_modules/@patternslib/pat-tiptap/src/extensions/fixed-paragraph.js"],"sourcesContent":["import { Node, mergeAttributes } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nexport const factory = () => {\n    return Node.create({\n        name: \"fixed-paragraph\",\n\n        addOptions() {\n            return {\n                HTMLAttributes: {\n                    class: \"fixed-paragraph\",\n                },\n            };\n        },\n\n        group: \"block\",\n        isolating: true,\n        selectable: true,\n\n        parseHTML() {\n            return [\n                {\n                    tag: \"p\",\n                    getAttrs: (node) => node.matches(\".fixed-paragraph\") && null,\n                },\n            ];\n        },\n\n        renderHTML({ HTMLAttributes }) {\n            return [\n                \"p\",\n                mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n                \" \", // Add a space to the end of the paragraph to make it selectable\n            ];\n        },\n\n        // NOTE: Deactivate whole ProseMirror plugin while registering the\n        // extension as it is used in the trailing-node extension.\n        // Why is it deactivated? See `TODO` comment below.\n        DEACTIVATED__addProseMirrorPlugins() {\n            return [\n                new Plugin({\n                    filterTransaction(transaction, state) {\n                        let result = true; // true for keep, false for stop transaction\n                        const replaceSteps = [];\n                        transaction.steps.forEach((step, index) => {\n                            if (step.jsonID === \"replace\") {\n                                replaceSteps.push(index);\n                            }\n                        });\n\n                        replaceSteps.forEach((index) => {\n                            const map = transaction.mapping.maps[index];\n                            const oldStart = map.ranges[0];\n                            const oldEnd = map.ranges[0] + map.ranges[1];\n                            // TODO: This code breaks for tables when adding\n                            // columns left/right within a table cell.\n                            state.doc.nodesBetween(oldStart, oldEnd, (node) => {\n                                if (node.type.name === \"fixed-paragraph\") {\n                                    result = false;\n                                }\n                            });\n                        });\n                        return result;\n                    },\n                }),\n            ];\n        },\n    });\n};\n"],"names":["factory","Node","create","name","addOptions","HTMLAttributes","class","group","isolating","selectable","parseHTML","tag","getAttrs","node","matches","renderHTML","_ref","mergeAttributes","this","options","DEACTIVATED__addProseMirrorPlugins","Plugin","filterTransaction","transaction","state","result","replaceSteps","steps","forEach","step","index","jsonID","push","map","mapping","maps","oldStart","ranges","oldEnd","doc","nodesBetween","type"],"sourceRoot":""}