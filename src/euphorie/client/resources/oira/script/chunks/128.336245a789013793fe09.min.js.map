{"version":3,"file":"chunks/128.336245a789013793fe09.min.js","mappings":"wWAEA,MAAMA,EAAiB,yCACjBC,EAAiB,yCACjBC,EAAuB,sCACvBC,EAAuB,sCACvBC,EAAO,EAAAC,KAAA,OAAY,CACrBC,KAAM,OACNC,WAAU,KACC,CACHC,eAAgB,KAGxBC,UAAS,IACE,CACH,CACIC,IAAK,UAET,CACIA,IAAK,IACLC,SAAUC,GAAkC,WAA1BA,EAAKC,MAAMC,YAA2B,MAE5D,CACID,MAAO,cACPF,SAAUI,GAAS,4BAA4BC,KAAKD,IAAU,OAI1EE,YAAW,eAAET,IACT,MAAO,CAAC,UAAU,IAAAU,iBAAgBC,KAAKC,QAAQZ,eAAgBA,GAAiB,IAEpFa,cACI,MAAO,CACHC,QAAS,IAAM,EAAGC,SAAAA,KACPA,EAASC,QAAQL,KAAKb,MAEjCmB,WAAY,IAAM,EAAGF,SAAAA,KACVA,EAASG,WAAWP,KAAKb,MAEpCqB,UAAW,IAAM,EAAGJ,SAAAA,KACTA,EAASK,UAAUT,KAAKb,QAI3CuB,uBACI,MAAO,CACH,QAAS,IAAMV,KAAKW,OAAOP,SAASE,aACpC,QAAS,IAAMN,KAAKW,OAAOP,SAASE,eAG5CM,gBACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAMjC,EACNkC,KAAMf,KAAKe,QAEf,IAAAF,eAAc,CACVC,KAAM/B,EACNgC,KAAMf,KAAKe,SAIvBC,gBACI,MAAO,EACH,IAAAC,eAAc,CACVH,KAAMhC,EACNiC,KAAMf,KAAKe,QAEf,IAAAE,eAAc,CACVH,KAAM9B,EACN+B,KAAMf,KAAKe","sources":["webpack://oira.prototype/./node_modules/@tiptap/extension-bold/dist/tiptap-extension-bold.esm.js"],"sourcesContent":["import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/;\r\nconst starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/g;\r\nconst underscoreInputRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))$/;\r\nconst underscorePasteRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))/g;\r\nconst Bold = Mark.create({\r\n    name: 'bold',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 'strong',\r\n            },\r\n            {\r\n                tag: 'b',\r\n                getAttrs: node => node.style.fontWeight !== 'normal' && null,\r\n            },\r\n            {\r\n                style: 'font-weight',\r\n                getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setBold: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleBold: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetBold: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-b': () => this.editor.commands.toggleBold(),\r\n            'Mod-B': () => this.editor.commands.toggleBold(),\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: starInputRegex,\r\n                type: this.type,\r\n            }),\r\n            markInputRule({\r\n                find: underscoreInputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: starPasteRegex,\r\n                type: this.type,\r\n            }),\r\n            markPasteRule({\r\n                find: underscorePasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Bold, Bold as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n//# sourceMappingURL=tiptap-extension-bold.esm.js.map\n"],"names":["starInputRegex","starPasteRegex","underscoreInputRegex","underscorePasteRegex","Bold","Mark","name","addOptions","HTMLAttributes","parseHTML","tag","getAttrs","node","style","fontWeight","value","test","renderHTML","mergeAttributes","this","options","addCommands","setBold","commands","setMark","toggleBold","toggleMark","unsetBold","unsetMark","addKeyboardShortcuts","editor","addInputRules","markInputRule","find","type","addPasteRules","markPasteRule"],"sourceRoot":""}