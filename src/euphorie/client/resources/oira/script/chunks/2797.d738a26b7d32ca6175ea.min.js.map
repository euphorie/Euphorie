{"version":3,"file":"chunks/2797.d738a26b7d32ca6175ea.min.js","mappings":"0OAIA,MAAMA,EAAc,EAAAC,UAAA,OAAiB,CACjCC,KAAM,cACNC,WAAU,KACC,CACHC,iBAAkB,kBAClBC,eAAgB,WAChBC,YAAa,oBACbC,sBAAsB,EACtBC,iBAAiB,EACjBC,iBAAiB,IAGzBC,wBACI,MAAO,CACH,IAAI,KAAO,CACPC,MAAO,CACHC,YAAa,EAAGC,IAAAA,EAAKC,UAAAA,MACjB,MAAMC,EAASC,KAAKC,OAAOC,aAAeF,KAAKG,QAAQZ,sBACjD,OAAEa,GAAWN,EACbF,EAAc,GACpB,GAAKG,EA0BL,OAvBAF,EAAIQ,aAAY,CAACC,EAAMC,KACnB,MAAMC,EAAYJ,GAAUG,GAAOH,GAAWG,EAAMD,EAAKG,SACnDC,GAAWJ,EAAKK,SAAWL,EAAKM,WACtC,IAAKJ,IAAcR,KAAKG,QAAQX,kBAAoBkB,EAAS,CACzD,MAAMG,EAAU,CAACb,KAAKG,QAAQd,gBAC1BW,KAAKC,OAAOS,SACZG,EAAQC,KAAKd,KAAKG,QAAQf,kBAE9B,MAAM2B,EAAa,SAAgBR,EAAKA,EAAMD,EAAKG,SAAU,CACzDO,MAAOH,EAAQI,KAAK,KACpB,mBAAwD,mBAA7BjB,KAAKG,QAAQb,YAClCU,KAAKG,QAAQb,YAAY,CACvBW,OAAQD,KAAKC,OACbK,KAAAA,EACAC,IAAAA,EACAC,UAAAA,IAEFR,KAAKG,QAAQb,cAEvBM,EAAYkB,KAAKC,GAErB,OAAOf,KAAKG,QAAQV,mBAEjB,YAAqBI,EAAKD","sources":["webpack://oira.prototype/./node_modules/@tiptap/extension-placeholder/dist/tiptap-extension-placeholder.esm.js"],"sourcesContent":["import { Extension } from '@tiptap/core';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport { Plugin } from 'prosemirror-state';\n\nconst Placeholder = Extension.create({\r\n    name: 'placeholder',\r\n    addOptions() {\r\n        return {\r\n            emptyEditorClass: 'is-editor-empty',\r\n            emptyNodeClass: 'is-empty',\r\n            placeholder: 'Write something â€¦',\r\n            showOnlyWhenEditable: true,\r\n            showOnlyCurrent: true,\r\n            includeChildren: false,\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            new Plugin({\r\n                props: {\r\n                    decorations: ({ doc, selection }) => {\r\n                        const active = this.editor.isEditable || !this.options.showOnlyWhenEditable;\r\n                        const { anchor } = selection;\r\n                        const decorations = [];\r\n                        if (!active) {\r\n                            return;\r\n                        }\r\n                        doc.descendants((node, pos) => {\r\n                            const hasAnchor = anchor >= pos && anchor <= (pos + node.nodeSize);\r\n                            const isEmpty = !node.isLeaf && !node.childCount;\r\n                            if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\r\n                                const classes = [this.options.emptyNodeClass];\r\n                                if (this.editor.isEmpty) {\r\n                                    classes.push(this.options.emptyEditorClass);\r\n                                }\r\n                                const decoration = Decoration.node(pos, pos + node.nodeSize, {\r\n                                    class: classes.join(' '),\r\n                                    'data-placeholder': typeof this.options.placeholder === 'function'\r\n                                        ? this.options.placeholder({\r\n                                            editor: this.editor,\r\n                                            node,\r\n                                            pos,\r\n                                            hasAnchor,\r\n                                        })\r\n                                        : this.options.placeholder,\r\n                                });\r\n                                decorations.push(decoration);\r\n                            }\r\n                            return this.options.includeChildren;\r\n                        });\r\n                        return DecorationSet.create(doc, decorations);\r\n                    },\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Placeholder, Placeholder as default };\n//# sourceMappingURL=tiptap-extension-placeholder.esm.js.map\n"],"names":["Placeholder","Extension","name","addOptions","emptyEditorClass","emptyNodeClass","placeholder","showOnlyWhenEditable","showOnlyCurrent","includeChildren","addProseMirrorPlugins","props","decorations","doc","selection","active","this","editor","isEditable","options","anchor","descendants","node","pos","hasAnchor","nodeSize","isEmpty","isLeaf","childCount","classes","push","decoration","class","join"],"sourceRoot":""}