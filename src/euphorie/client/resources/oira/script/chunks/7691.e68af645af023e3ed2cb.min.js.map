{"version":3,"file":"chunks/7691.e68af645af023e3ed2cb.min.js","mappings":"2GAUQ,SAAWA,GAAU,aAIzB,SAASC,EAAOC,EAAMC,GAClB,IAAIC,EAAQF,EAAKG,MAAM,KACvB,OAAOF,EAAM,IAAO,GAAKA,EAAM,KAAQ,GACjCC,EAAM,GACND,EAAM,IAAM,GAAKA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,KAAO,IAClEC,EAAM,GACNA,EAAM,GAEhB,SAASE,EAAuBC,EAAQC,EAAeC,GASnD,MAAY,MAARA,EACOD,EAAgB,UAAY,UACpB,MAARC,EACAD,EAAgB,SAAW,SAE3BD,EAAS,IAAMN,EAbb,CACTS,GAAIF,EAAgB,yBAA2B,yBAC/CG,GAAIH,EAAgB,yBAA2B,yBAC/CI,GAAIJ,EAAgB,sBAAwB,sBAC5CK,GAAI,gBACJC,GAAI,wBACJC,GAAI,kBAOgCN,IAAOF,GAGnD,SAASS,EAAoBC,EAAGC,GAC5B,IAAIC,EAAW,CACPC,WAAY,0DAA0Df,MAClE,KAEJgB,WAAY,0DAA0DhB,MAClE,KAEJiB,SAAU,4DAA4DjB,MAClE,MAKZ,OAAU,IAANY,EACOE,EAAqB,WACvBI,MAAM,EAAG,GACTC,OAAOL,EAAqB,WAAEI,MAAM,EAAG,IAE3CN,EASEE,EALI,qBAAqBM,KAAKP,GAC/B,aACA,sCAAsCO,KAAKP,GAC3C,WACA,cACoBD,EAAES,OARjBP,EAAqB,WAUpC,SAASQ,EAAqBC,GAC1B,OAAO,WACH,OAAOA,EAAM,KAAwB,KAAjBC,KAAKC,QAAiB,IAAM,IAAM,QAIrD9B,EAAO+B,aAAa,KAAM,CAC/BC,OAAQ,CACJd,OAAQ,yFAAyFb,MAC7F,KAEJ4B,WAAY,iGAAiG5B,MACzG,MAGR6B,YAAa,yDAAyD7B,MAClE,KAEJc,SAAUH,EACVmB,cAAe,uBAAuB9B,MAAM,KAC5C+B,YAAa,uBAAuB/B,MAAM,KAC1CgC,eAAgB,CACZC,GAAI,QACJC,IAAK,WACLC,EAAG,aACHC,GAAI,iBACJC,IAAK,wBACLC,KAAM,+BAEVC,SAAU,CACNC,QAASlB,EAAqB,cAC9BmB,QAASnB,EAAqB,YAC9BoB,QAASpB,EAAqB,WAC9BqB,SAAUrB,EAAqB,cAC/BsB,SAAU,WACN,OAAQpB,KAAKH,OACT,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACD,OAAOC,EAAqB,oBAAoBuB,KAAKrB,MACzD,KAAK,EACL,KAAK,EACL,KAAK,EACD,OAAOF,EAAqB,qBAAqBuB,KAAKrB,QAGlEsB,SAAU,KAEdC,aAAc,CACVC,OAAQ,QACRC,KAAM,UACNC,EAAG,kBACH7C,GAAIJ,EACJW,EAAGX,EACHK,GAAIL,EACJkD,EAAG,SACH5C,GAAIN,EACJmD,EAAG,OACH5C,GAAIP,EACJoD,EAAG,SACH5C,GAAIR,EACJqD,EAAG,MACH5C,GAAIT,GAGRsD,cAAe,wBACfC,KAAM,SAAUC,GACZ,MAAO,iBAAiBrC,KAAKqC,IAEjCC,SAAU,SAAUC,EAAMC,EAAQC,GAC9B,OAAIF,EAAO,EACA,OACAA,EAAO,GACP,QACAA,EAAO,GACP,MAEA,UAGfG,uBAAwB,iBACxBC,QAAS,SAAU7D,EAAQ8D,GACvB,OAAQA,GACJ,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,IACL,IAAK,IACD,OAAO9D,EAAS,KACpB,IAAK,IACD,OAAOA,EAAS,MACpB,QACI,OAAOA,IAGnB+D,KAAM,CACFC,IAAK,EACLC,IAAK,KAhKyBC,CAAQ,EAAQ","sources":["webpack://oira.prototype/./node_modules/moment/locale/uk.js"],"sourcesContent":["//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            dd: 'день_дні_днів',\n            MM: 'місяць_місяці_місяців',\n            yy: 'рік_роки_років',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        } else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n                nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                    '_'\n                ),\n                accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                    '_'\n                ),\n                genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                    '_'\n                ),\n            },\n            nounCase;\n\n        if (m === true) {\n            return weekdays['nominative']\n                .slice(1, 7)\n                .concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n            ? 'accusative'\n            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n            ? 'genitive'\n            : 'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months: {\n            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n                '_'\n            ),\n            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n            '_'\n        ),\n        weekdays: weekdaysCaseReplace,\n        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY р.',\n            LLL: 'D MMMM YYYY р., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n        },\n        calendar: {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: '%s тому',\n            s: 'декілька секунд',\n            ss: relativeTimeWithPlural,\n            m: relativeTimeWithPlural,\n            mm: relativeTimeWithPlural,\n            h: 'годину',\n            hh: relativeTimeWithPlural,\n            d: 'день',\n            dd: relativeTimeWithPlural,\n            M: 'місяць',\n            MM: relativeTimeWithPlural,\n            y: 'рік',\n            yy: relativeTimeWithPlural,\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    return uk;\n\n})));\n"],"names":["moment","plural","word","num","forms","split","relativeTimeWithPlural","number","withoutSuffix","key","ss","mm","hh","dd","MM","yy","weekdaysCaseReplace","m","format","weekdays","nominative","accusative","genitive","slice","concat","test","day","processHoursFunction","str","this","hours","defineLocale","months","standalone","monthsShort","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","call","sameElse","relativeTime","future","past","s","h","d","M","y","meridiemParse","isPM","input","meridiem","hour","minute","isLower","dayOfMonthOrdinalParse","ordinal","period","week","dow","doy","factory"],"sourceRoot":""}