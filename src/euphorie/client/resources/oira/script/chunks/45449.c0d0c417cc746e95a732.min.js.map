{"version":3,"file":"chunks/45449.c0d0c417cc746e95a732.min.js","mappings":"2HAkDAA,EAAOC,QA1CP,SAAgBC,GACd,MAAMC,EAAiB,6CACvB,MAAO,CACLC,KAAM,SACNC,SAAU,CACRC,QACE,mGACFC,SACEJ,EACFK,QACE,cAEJC,SAAU,CACRP,EAAKQ,kBACLR,EAAKS,YACLT,EAAKU,oBACLV,EAAKW,qBACL,CACEC,UAAW,QACXC,cAAe,gCACfC,IAAK,KACLC,QAAS,KACTR,SAAU,CACRP,EAAKgB,QAAQhB,EAAKiB,WAAY,CAE5BC,OAAQ,CACNC,gBAAgB,EAChBC,YAAY,OAKpB,CACEC,MAAO,yBACPP,IAAK,IACLX,SAAUF,EACVM,SAAU,CAAE,UAIpB,C","sources":["webpack://@patternslib/patternslib/./node_modules/highlight.js/lib/languages/thrift.js"],"sourcesContent":["/*\nLanguage: Thrift\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Thrift message definition format\nWebsite: https://thrift.apache.org\nCategory: protocols\n*/\n\nfunction thrift(hljs) {\n  const BUILT_IN_TYPES = 'bool byte i16 i32 i64 double string binary';\n  return {\n    name: 'Thrift',\n    keywords: {\n      keyword:\n        'namespace const typedef struct enum service exception void oneway set list map required optional',\n      built_in:\n        BUILT_IN_TYPES,\n      literal:\n        'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'struct enum service exception',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            // hack: eating everything after the first title\n            starts: {\n              endsWithParent: true,\n              excludeEnd: true\n            }\n          })\n        ]\n      },\n      {\n        begin: '\\\\b(set|list|map)\\\\s*<',\n        end: '>',\n        keywords: BUILT_IN_TYPES,\n        contains: [ 'self' ]\n      }\n    ]\n  };\n}\n\nmodule.exports = thrift;\n"],"names":["module","exports","hljs","BUILT_IN_TYPES","name","keywords","keyword","built_in","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","beginKeywords","end","illegal","inherit","TITLE_MODE","starts","endsWithParent","excludeEnd","begin"],"sourceRoot":""}