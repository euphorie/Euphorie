{"version":3,"file":"chunks/63402.73aa808c002a4898cfd0.min.js","mappings":"wMAKA,MAAMA,EAAa,2DAKbC,EAAQ,EAAAC,KAAKC,OAAO,CACtBC,KAAM,QACN,UAAAC,GACI,MAAO,CACHC,QAAQ,EACRC,aAAa,EACbC,eAAgB,CAAC,EAEzB,EACA,MAAAF,GACI,OAAOG,KAAKC,QAAQJ,MACxB,EACA,KAAAK,GACI,OAAOF,KAAKC,QAAQJ,OAAS,SAAW,OAC5C,EACAM,WAAW,EACX,aAAAC,GACI,MAAO,CACHC,IAAK,CACDC,QAAS,MAEbC,IAAK,CACDD,QAAS,MAEbE,MAAO,CACHF,QAAS,MAGrB,EACA,SAAAG,GACI,MAAO,CACH,CACIC,IAAKV,KAAKC,QAAQH,YACZ,WACA,gCAGlB,EACA,UAAAa,EAAW,eAAEZ,IACT,MAAO,CAAC,OAAO,IAAAa,iBAAgBZ,KAAKC,QAAQF,eAAgBA,GAChE,EACA,WAAAc,GACI,MAAO,CACHC,SAAUb,GAAW,EAAGc,cACbA,EAASC,cAAc,CAC1BC,KAAMjB,KAAKL,KACXuB,MAAOjB,IAIvB,EACA,aAAAkB,GACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAM9B,EACN0B,KAAMjB,KAAKiB,KACXK,cAAeC,IACX,MAAO,CAAE,CAAEhB,EAAKF,EAAKG,GAASe,EAC9B,MAAO,CAAElB,MAAKE,MAAKC,QAAO,IAI1C,ICtESgB,EAAUA,IACZC,EAAYC,OAAO,CACtB/B,KAAM,eAENC,UAAAA,GACI,MAAO,CACHC,QAAQ,EACRE,eAAgB,CAAC,EAEzB,EAEA4B,gBAAgB,EAChBC,MAAM,EACNzB,WAAW,EACX0B,WAAW,EACXC,YAAY,EAEZrB,SAAAA,GACI,MAAO,CACH,CACIC,IAAK,WAELqB,SAAWC,GAAoC,OAA3BA,EAAKC,QAAQ,WAAsB,MAGnE,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-image/dist/index.js","webpack://@patternslib/patternslib/./node_modules/@patternslib/pat-tiptap/src/extensions/image-inline.js"],"sourcesContent":["import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\n\n/**\n * Matches an image to a ![image](src \"title\") on input.\n */\nconst inputRegex = /(?:^|\\s)(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/;\n/**\n * This extension allows you to insert images.\n * @see https://www.tiptap.dev/api/nodes/image\n */\nconst Image = Node.create({\n    name: 'image',\n    addOptions() {\n        return {\n            inline: false,\n            allowBase64: false,\n            HTMLAttributes: {},\n        };\n    },\n    inline() {\n        return this.options.inline;\n    },\n    group() {\n        return this.options.inline ? 'inline' : 'block';\n    },\n    draggable: true,\n    addAttributes() {\n        return {\n            src: {\n                default: null,\n            },\n            alt: {\n                default: null,\n            },\n            title: {\n                default: null,\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: this.options.allowBase64\n                    ? 'img[src]'\n                    : 'img[src]:not([src^=\"data:\"])',\n            },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n    },\n    addCommands() {\n        return {\n            setImage: options => ({ commands }) => {\n                return commands.insertContent({\n                    type: this.name,\n                    attrs: options,\n                });\n            },\n        };\n    },\n    addInputRules() {\n        return [\n            nodeInputRule({\n                find: inputRegex,\n                type: this.type,\n                getAttributes: match => {\n                    const [, , alt, src, title] = match;\n                    return { src, alt, title };\n                },\n            }),\n        ];\n    },\n});\n\nexport { Image, Image as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import { Image as TipTapImage } from \"@tiptap/extension-image\";\n\nexport const factory = () => {\n    return TipTapImage.extend({\n        name: \"image-inline\",\n\n        addOptions() {\n            return {\n                inline: true,\n                HTMLAttributes: {},\n            };\n        },\n\n        allowGapCursor: false,\n        atom: false,\n        draggable: true,\n        isolating: false,\n        selectable: true,\n\n        parseHTML() {\n            return [\n                {\n                    tag: \"img[src]\",\n                    // Should not be within a figure tag. For that we have image-figure.js\n                    getAttrs: (node) => node.closest(\"figure\") === null && null, // prosemirror expects null for a successful check.\n                },\n            ];\n        },\n    });\n};\n"],"names":["inputRegex","Image","Node","create","name","addOptions","inline","allowBase64","HTMLAttributes","this","options","group","draggable","addAttributes","src","default","alt","title","parseHTML","tag","renderHTML","mergeAttributes","addCommands","setImage","commands","insertContent","type","attrs","addInputRules","nodeInputRule","find","getAttributes","match","factory","TipTapImage","extend","allowGapCursor","atom","isolating","selectable","getAttrs","node","closest"],"sourceRoot":""}