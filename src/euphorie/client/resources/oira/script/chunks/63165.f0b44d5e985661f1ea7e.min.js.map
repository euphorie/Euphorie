{"version":3,"file":"chunks/63165.f0b44d5e985661f1ea7e.min.js","mappings":"wQAKA,MAAMA,EAAa,WAKbC,EAAa,EAAAC,KAAKC,OAAO,CAC3BC,KAAM,aACN,UAAAC,GACI,MAAO,CACHC,eAAgB,CAAC,EAEzB,EACAC,QAAS,SACTC,MAAO,QACPC,UAAU,EACV,SAAAC,GACI,MAAO,CACH,CAAEC,IAAK,cAEf,EACA,UAAAC,EAAW,eAAEN,IACT,MAAO,CAAC,cAAc,IAAAO,iBAAgBC,KAAKC,QAAQT,eAAgBA,GAAiB,EACxF,EACA,WAAAU,GACI,MAAO,CACHC,cAAe,IAAM,EAAGC,cACbA,EAASC,OAAOL,KAAKV,MAEhCgB,iBAAkB,IAAM,EAAGF,cAChBA,EAASG,WAAWP,KAAKV,MAEpCkB,gBAAiB,IAAM,EAAGJ,cACfA,EAASK,KAAKT,KAAKV,MAGtC,EACA,oBAAAoB,GACI,MAAO,CACH,cAAe,IAAMV,KAAKW,OAAOP,SAASE,mBAElD,EACA,aAAAM,GACI,MAAO,EACH,IAAAC,mBAAkB,CACdC,KAAM5B,EACN6B,KAAMf,KAAKe,OAGvB,G","sources":["webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-blockquote/dist/index.js"],"sourcesContent":["import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\n/**\n * Matches a blockquote to a `>` as input.\n */\nconst inputRegex = /^\\s*>\\s$/;\n/**\n * This extension allows you to create blockquotes.\n * @see https://tiptap.dev/api/nodes/blockquote\n */\nconst Blockquote = Node.create({\n    name: 'blockquote',\n    addOptions() {\n        return {\n            HTMLAttributes: {},\n        };\n    },\n    content: 'block+',\n    group: 'block',\n    defining: true,\n    parseHTML() {\n        return [\n            { tag: 'blockquote' },\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n    addCommands() {\n        return {\n            setBlockquote: () => ({ commands }) => {\n                return commands.wrapIn(this.name);\n            },\n            toggleBlockquote: () => ({ commands }) => {\n                return commands.toggleWrap(this.name);\n            },\n            unsetBlockquote: () => ({ commands }) => {\n                return commands.lift(this.name);\n            },\n        };\n    },\n    addKeyboardShortcuts() {\n        return {\n            'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n        };\n    },\n    addInputRules() {\n        return [\n            wrappingInputRule({\n                find: inputRegex,\n                type: this.type,\n            }),\n        ];\n    },\n});\n\nexport { Blockquote, Blockquote as default, inputRegex };\n//# sourceMappingURL=index.js.map\n"],"names":["inputRegex","Blockquote","Node","create","name","addOptions","HTMLAttributes","content","group","defining","parseHTML","tag","renderHTML","mergeAttributes","this","options","addCommands","setBlockquote","commands","wrapIn","toggleBlockquote","toggleWrap","unsetBlockquote","lift","addKeyboardShortcuts","editor","addInputRules","wrappingInputRule","find","type"],"sourceRoot":""}