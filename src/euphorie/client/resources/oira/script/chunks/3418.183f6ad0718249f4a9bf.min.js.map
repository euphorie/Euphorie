{"version":3,"file":"chunks/3418.183f6ad0718249f4a9bf.min.js","mappings":"+QAEA,MAAMA,EAAa,qCACbC,EAAa,qCACbC,EAAS,EAAAC,KAAA,OAAY,CACvBC,KAAM,SACNC,WAAU,KACC,CACHC,eAAgB,KAGxBC,UAAS,IACE,CACH,CACIC,IAAK,KAET,CACIA,IAAK,OAET,CACIA,IAAK,UAET,CACIC,MAAO,kBACPC,WAAW,EACXC,SAAUF,KAAUA,EAAMG,SAAS,iBAAkB,KAIjEC,YAAW,eAAEP,IACT,MAAO,CAAC,KAAK,IAAAQ,iBAAgBC,KAAKC,QAAQV,eAAgBA,GAAiB,IAE/EW,cACI,MAAO,CACHC,UAAW,IAAM,EAAGC,SAAAA,KACTA,EAASC,QAAQL,KAAKX,MAEjCiB,aAAc,IAAM,EAAGF,SAAAA,KACZA,EAASG,WAAWP,KAAKX,MAEpCmB,YAAa,IAAM,EAAGJ,SAAAA,KACXA,EAASK,UAAUT,KAAKX,QAI3CqB,uBACI,MAAO,CACH,cAAe,IAAMV,KAAKW,OAAOP,SAASE,iBAGlDM,gBACI,MAAO,EACH,IAAAC,eAAc,CACVC,KAAM7B,EACN8B,KAAMf,KAAKe,SAIvBC,gBACI,MAAO,EACH,IAAAC,eAAc,CACVH,KAAM5B,EACN6B,KAAMf,KAAKe","sources":["webpack://oira.prototype/./node_modules/@tiptap/extension-strike/dist/tiptap-extension-strike.esm.js"],"sourcesContent":["import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/;\r\nconst pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/g;\r\nconst Strike = Mark.create({\r\n    name: 'strike',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 's',\r\n            },\r\n            {\r\n                tag: 'del',\r\n            },\r\n            {\r\n                tag: 'strike',\r\n            },\r\n            {\r\n                style: 'text-decoration',\r\n                consuming: false,\r\n                getAttrs: style => (style.includes('line-through') ? {} : false),\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setStrike: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleStrike: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetStrike: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-Shift-x': () => this.editor.commands.toggleStrike(),\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: pasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Strike, Strike as default, inputRegex, pasteRegex };\n//# sourceMappingURL=tiptap-extension-strike.esm.js.map\n"],"names":["inputRegex","pasteRegex","Strike","Mark","name","addOptions","HTMLAttributes","parseHTML","tag","style","consuming","getAttrs","includes","renderHTML","mergeAttributes","this","options","addCommands","setStrike","commands","setMark","toggleStrike","toggleMark","unsetStrike","unsetMark","addKeyboardShortcuts","editor","addInputRules","markInputRule","find","type","addPasteRules","markPasteRule"],"sourceRoot":""}